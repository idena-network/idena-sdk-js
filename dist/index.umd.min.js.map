{"version":3,"file":"index.umd.min.js","sources":["../src/models/proto/models.ts","../src/utils.ts","../src/crypto.ts","../src/models/transaction.ts"],"sourcesContent":["/* eslint-disable */\nimport Long from 'long';\nimport * as _m0 from 'protobufjs/minimal';\n\nexport const protobufPackage = 'models';\n\nexport interface ProtoTransaction {\n  data: ProtoTransaction_Data | undefined;\n  signature: Uint8Array;\n  useRlp: boolean;\n}\n\nexport interface ProtoTransaction_Data {\n  nonce: number;\n  epoch: number;\n  type: number;\n  to: Uint8Array;\n  amount: Uint8Array;\n  maxFee: Uint8Array;\n  tips: Uint8Array;\n  payload: Uint8Array;\n}\n\nexport interface ProtoDeployContractAttachment {\n  CodeHash: Uint8Array;\n  args: Uint8Array[];\n}\n\nexport interface ProtoCallContractAttachment {\n  method: string;\n  args: Uint8Array[];\n}\n\nfunction createBaseProtoTransaction(): ProtoTransaction {\n  return { data: undefined, signature: new Uint8Array(), useRlp: false };\n}\n\nexport const ProtoTransaction = {\n  encode(\n    message: ProtoTransaction,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.data !== undefined) {\n      ProtoTransaction_Data.encode(\n        message.data,\n        writer.uint32(10).fork(),\n      ).ldelim();\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    if (message.useRlp === true) {\n      writer.uint32(24).bool(message.useRlp);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ProtoTransaction {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTransaction();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = ProtoTransaction_Data.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        case 3:\n          message.useRlp = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProtoTransaction {\n    return {\n      data: isSet(object.data)\n        ? ProtoTransaction_Data.fromJSON(object.data)\n        : undefined,\n      signature: isSet(object.signature)\n        ? bytesFromBase64(object.signature)\n        : new Uint8Array(),\n      useRlp: isSet(object.useRlp) ? Boolean(object.useRlp) : false,\n    };\n  },\n\n  toJSON(message: ProtoTransaction): unknown {\n    const obj: any = {};\n    message.data !== undefined &&\n      (obj.data = message.data\n        ? ProtoTransaction_Data.toJSON(message.data)\n        : undefined);\n    message.signature !== undefined &&\n      (obj.signature = base64FromBytes(\n        message.signature !== undefined ? message.signature : new Uint8Array(),\n      ));\n    message.useRlp !== undefined && (obj.useRlp = message.useRlp);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoTransaction>, I>>(\n    object: I,\n  ): ProtoTransaction {\n    const message = createBaseProtoTransaction();\n    message.data =\n      object.data !== undefined && object.data !== null\n        ? ProtoTransaction_Data.fromPartial(object.data)\n        : undefined;\n    message.signature = object.signature ?? new Uint8Array();\n    message.useRlp = object.useRlp ?? false;\n    return message;\n  },\n};\n\nfunction createBaseProtoTransaction_Data(): ProtoTransaction_Data {\n  return {\n    nonce: 0,\n    epoch: 0,\n    type: 0,\n    to: new Uint8Array(),\n    amount: new Uint8Array(),\n    maxFee: new Uint8Array(),\n    tips: new Uint8Array(),\n    payload: new Uint8Array(),\n  };\n}\n\nexport const ProtoTransaction_Data = {\n  encode(\n    message: ProtoTransaction_Data,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.nonce !== 0) {\n      writer.uint32(8).uint32(message.nonce);\n    }\n    if (message.epoch !== 0) {\n      writer.uint32(16).uint32(message.epoch);\n    }\n    if (message.type !== 0) {\n      writer.uint32(24).uint32(message.type);\n    }\n    if (message.to.length !== 0) {\n      writer.uint32(34).bytes(message.to);\n    }\n    if (message.amount.length !== 0) {\n      writer.uint32(42).bytes(message.amount);\n    }\n    if (message.maxFee.length !== 0) {\n      writer.uint32(50).bytes(message.maxFee);\n    }\n    if (message.tips.length !== 0) {\n      writer.uint32(58).bytes(message.tips);\n    }\n    if (message.payload.length !== 0) {\n      writer.uint32(66).bytes(message.payload);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoTransaction_Data {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTransaction_Data();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint32();\n          break;\n        case 2:\n          message.epoch = reader.uint32();\n          break;\n        case 3:\n          message.type = reader.uint32();\n          break;\n        case 4:\n          message.to = reader.bytes();\n          break;\n        case 5:\n          message.amount = reader.bytes();\n          break;\n        case 6:\n          message.maxFee = reader.bytes();\n          break;\n        case 7:\n          message.tips = reader.bytes();\n          break;\n        case 8:\n          message.payload = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProtoTransaction_Data {\n    return {\n      nonce: isSet(object.nonce) ? Number(object.nonce) : 0,\n      epoch: isSet(object.epoch) ? Number(object.epoch) : 0,\n      type: isSet(object.type) ? Number(object.type) : 0,\n      to: isSet(object.to) ? bytesFromBase64(object.to) : new Uint8Array(),\n      amount: isSet(object.amount)\n        ? bytesFromBase64(object.amount)\n        : new Uint8Array(),\n      maxFee: isSet(object.maxFee)\n        ? bytesFromBase64(object.maxFee)\n        : new Uint8Array(),\n      tips: isSet(object.tips)\n        ? bytesFromBase64(object.tips)\n        : new Uint8Array(),\n      payload: isSet(object.payload)\n        ? bytesFromBase64(object.payload)\n        : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: ProtoTransaction_Data): unknown {\n    const obj: any = {};\n    message.nonce !== undefined && (obj.nonce = Math.round(message.nonce));\n    message.epoch !== undefined && (obj.epoch = Math.round(message.epoch));\n    message.type !== undefined && (obj.type = Math.round(message.type));\n    message.to !== undefined &&\n      (obj.to = base64FromBytes(\n        message.to !== undefined ? message.to : new Uint8Array(),\n      ));\n    message.amount !== undefined &&\n      (obj.amount = base64FromBytes(\n        message.amount !== undefined ? message.amount : new Uint8Array(),\n      ));\n    message.maxFee !== undefined &&\n      (obj.maxFee = base64FromBytes(\n        message.maxFee !== undefined ? message.maxFee : new Uint8Array(),\n      ));\n    message.tips !== undefined &&\n      (obj.tips = base64FromBytes(\n        message.tips !== undefined ? message.tips : new Uint8Array(),\n      ));\n    message.payload !== undefined &&\n      (obj.payload = base64FromBytes(\n        message.payload !== undefined ? message.payload : new Uint8Array(),\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoTransaction_Data>, I>>(\n    object: I,\n  ): ProtoTransaction_Data {\n    const message = createBaseProtoTransaction_Data();\n    message.nonce = object.nonce ?? 0;\n    message.epoch = object.epoch ?? 0;\n    message.type = object.type ?? 0;\n    message.to = object.to ?? new Uint8Array();\n    message.amount = object.amount ?? new Uint8Array();\n    message.maxFee = object.maxFee ?? new Uint8Array();\n    message.tips = object.tips ?? new Uint8Array();\n    message.payload = object.payload ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseProtoDeployContractAttachment(): ProtoDeployContractAttachment {\n  return { CodeHash: new Uint8Array(), args: [] };\n}\n\nexport const ProtoDeployContractAttachment = {\n  encode(\n    message: ProtoDeployContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.CodeHash.length !== 0) {\n      writer.uint32(10).bytes(message.CodeHash);\n    }\n    for (const v of message.args) {\n      writer.uint32(18).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoDeployContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoDeployContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.CodeHash = reader.bytes();\n          break;\n        case 2:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProtoDeployContractAttachment {\n    return {\n      CodeHash: isSet(object.CodeHash)\n        ? bytesFromBase64(object.CodeHash)\n        : new Uint8Array(),\n      args: Array.isArray(object?.args)\n        ? object.args.map((e: any) => bytesFromBase64(e))\n        : [],\n    };\n  },\n\n  toJSON(message: ProtoDeployContractAttachment): unknown {\n    const obj: any = {};\n    message.CodeHash !== undefined &&\n      (obj.CodeHash = base64FromBytes(\n        message.CodeHash !== undefined ? message.CodeHash : new Uint8Array(),\n      ));\n    if (message.args) {\n      obj.args = message.args.map((e) =>\n        base64FromBytes(e !== undefined ? e : new Uint8Array()),\n      );\n    } else {\n      obj.args = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoDeployContractAttachment>, I>>(\n    object: I,\n  ): ProtoDeployContractAttachment {\n    const message = createBaseProtoDeployContractAttachment();\n    message.CodeHash = object.CodeHash ?? new Uint8Array();\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseProtoCallContractAttachment(): ProtoCallContractAttachment {\n  return { method: '', args: [] };\n}\n\nexport const ProtoCallContractAttachment = {\n  encode(\n    message: ProtoCallContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.method !== '') {\n      writer.uint32(10).string(message.method);\n    }\n    for (const v of message.args) {\n      writer.uint32(18).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoCallContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoCallContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.method = reader.string();\n          break;\n        case 2:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProtoCallContractAttachment {\n    return {\n      method: isSet(object.method) ? String(object.method) : '',\n      args: Array.isArray(object?.args)\n        ? object.args.map((e: any) => bytesFromBase64(e))\n        : [],\n    };\n  },\n\n  toJSON(message: ProtoCallContractAttachment): unknown {\n    const obj: any = {};\n    message.method !== undefined && (obj.method = message.method);\n    if (message.args) {\n      obj.args = message.args.map((e) =>\n        base64FromBytes(e !== undefined ? e : new Uint8Array()),\n      );\n    } else {\n      obj.args = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoCallContractAttachment>, I>>(\n    object: I,\n  ): ProtoCallContractAttachment {\n    const message = createBaseProtoCallContractAttachment();\n    message.method = object.method ?? '';\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis;\n  if (typeof self !== 'undefined') return self;\n  if (typeof window !== 'undefined') return window;\n  if (typeof global !== 'undefined') return global;\n  throw 'Unable to locate global object';\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob ||\n  ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa ||\n  ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  arr.forEach((byte) => {\n    bin.push(String.fromCharCode(byte));\n  });\n  return btoa(bin.join(''));\n}\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","function isHexPrefixed(str: string): boolean {\n  return str.slice(0, 2) === '0x';\n}\n\nexport function stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n\nexport function hexToUint8Array(hexString: string): Uint8Array {\n  const str = stripHexPrefix(hexString);\n\n  const arrayBuffer = new Uint8Array(str.length / 2);\n\n  for (let i = 0; i < str.length; i += 2) {\n    const byteValue = parseInt(str.substring(i, i + 2), 16);\n    arrayBuffer[i / 2] = byteValue;\n  }\n\n  return arrayBuffer;\n}\n\nexport function toHexString(\n  byteArray: Uint8Array | number[],\n  withPrefix = false,\n) {\n  return (\n    (withPrefix ? '0x' : '') +\n    Array.from(byteArray, function (byte) {\n      return `0${(byte & 0xff).toString(16)}`.slice(-2);\n    }).join('')\n  );\n}\n","import sha3 from 'js-sha3';\nimport { hexToUint8Array, toHexString } from './utils';\nimport secp256k1 from 'secp256k1';\n\nfunction getKeyArray(key: Uint8Array | number[] | string): Uint8Array {\n  return typeof key === 'string' ? hexToUint8Array(key) : new Uint8Array(key);\n}\n\nexport function privateKeyToPublicKey(\n  key: Uint8Array | number[] | string,\n  withPrefix = false,\n) {\n  const pubKey = secp256k1.publicKeyCreate(getKeyArray(key), false);\n  return toHexString(pubKey, withPrefix);\n}\n\nexport function publicKeyToAddress(\n  publicKey: Uint8Array | number[] | string,\n  withPrefix = true,\n) {\n  return toHexString(\n    sha3.keccak_256.array(getKeyArray(publicKey).slice(1)).slice(12),\n    withPrefix,\n  );\n}\n\nexport function privateKeyToAddress(\n  key: Uint8Array | number[] | string,\n  withPrefix = true,\n) {\n  if (!key) {\n    return '0x0000000000000000000000000000000000000000';\n  }\n\n  const pubKey = secp256k1.publicKeyCreate(getKeyArray(key), false);\n\n  return publicKeyToAddress(pubKey, withPrefix);\n}\n\nexport function sender(\n  data: Uint8Array | number[],\n  signature: Uint8Array | number[],\n  withPrefix = true,\n) {\n  const hash = sha3.keccak_256.array(data);\n  const pubKey = secp256k1.ecdsaRecover(\n    new Uint8Array(signature).slice(0, -1),\n    Number(signature[signature.length - 1]),\n    new Uint8Array(hash),\n    false,\n  );\n\n  return publicKeyToAddress(pubKey, withPrefix);\n}\n\nexport function sign(\n  data: Uint8Array | number[],\n  key: Uint8Array | number[] | string,\n): Uint8Array {\n  const hash = sha3.keccak_256.array(data);\n  const { signature, recid } = secp256k1.ecdsaSign(\n    new Uint8Array(hash),\n    typeof key === 'string' ? hexToUint8Array(key) : new Uint8Array(key),\n  );\n\n  return new Uint8Array([...signature, recid]);\n}\n","import { ProtoTransaction, ProtoTransaction_Data } from './proto/models';\nimport BN from 'bn.js';\nimport { hexToUint8Array, toHexString } from '../utils';\nimport sha3 from 'js-sha3';\nimport { sender, sign } from '../crypto';\n\nexport enum TransactionType {\n  SendTx = 0x0,\n  ActivationTx = 0x1,\n  InviteTx = 0x2,\n  KillTx = 0x3,\n  SubmitFlipTx = 0x4,\n  SubmitAnswersHashTx = 0x5,\n  SubmitShortAnswersTx = 0x6,\n  SubmitLongAnswersTx = 0x7,\n  EvidenceTx = 0x8,\n  OnlineStatusTx = 0x9,\n  KillInviteeTx = 0xa,\n  ChangeGodAddressTx = 0xb,\n  BurnTx = 0xc,\n  ChangeProfileTx = 0xd,\n  DeleteFlipTx = 0xe,\n  DeployContractTx = 0xf,\n  CallContractTx = 0x10,\n  TerminateContractTx = 0x11,\n  DelegateTx = 0x12,\n  UndelegateTx = 0x13,\n  KillDelegatorTx = 0x14,\n  StoreToIpfsTx = 0x15,\n}\n\nexport class Transaction {\n  private _nonce = 0;\n  private _epoch = 0;\n  private _type: TransactionType | number = 0;\n  private _to: Uint8Array | null = null;\n  private _amount: BN | null = null;\n  private _maxFee: BN | null = null;\n  private _tips: BN | null = null;\n  private _payload: Uint8Array | null = null;\n\n  private _signature: Uint8Array | null = null;\n\n  constructor(init?: Partial<Transaction>) {\n    this.nonce = init?.nonce ?? 0;\n    this.epoch = init?.epoch ?? 0;\n    this.type = init?.type ?? 0;\n    this.to = init?.to ?? null;\n    this.amount = init?.amount ?? null;\n    this.maxFee = init?.maxFee ?? null;\n    this.tips = init?.tips ?? null;\n    this.payload = init?.payload ?? null;\n  }\n\n  public set nonce(nonce: number) {\n    this._nonce = nonce;\n  }\n\n  public get nonce(): number {\n    return this._nonce;\n  }\n\n  public set epoch(epoch: number) {\n    this._epoch = epoch;\n  }\n\n  public get epoch(): number {\n    return this._epoch;\n  }\n\n  public set type(type: TransactionType) {\n    this._type = type;\n  }\n\n  public get type(): number {\n    return this._type;\n  }\n\n  public set to(to: string | Uint8Array | null) {\n    if (to === null) this._to = null;\n    else if (to instanceof Uint8Array) this._to = to;\n    else this._to = hexToUint8Array(to);\n  }\n\n  public get to(): string | null {\n    return this._to ? toHexString(this._to) : null;\n  }\n\n  public set amount(amount: number | string | BN | Uint8Array | null) {\n    this._amount = amount !== null ? new BN(amount) : null;\n  }\n\n  public get amount(): BN | null {\n    return this._amount;\n  }\n\n  public set maxFee(maxFee: number | string | BN | Uint8Array | null) {\n    this._maxFee = maxFee !== null ? new BN(maxFee) : null;\n  }\n\n  public get maxFee(): BN | null {\n    return this._maxFee;\n  }\n\n  public set tips(tips: number | string | BN | Uint8Array | null) {\n    this._tips = tips !== null ? new BN(tips) : null;\n  }\n\n  public get tips(): BN | null {\n    return this._tips;\n  }\n\n  public set payload(payload: Uint8Array | null) {\n    this._payload = payload;\n  }\n\n  public get payload(): Uint8Array | null {\n    return this._payload ? new Uint8Array(this._payload) : null;\n  }\n\n  public get signature(): Uint8Array | null {\n    return this._signature;\n  }\n\n  get hash() {\n    return Buffer.from(sha3.keccak_256.array(this.toBytes())).toString('hex');\n  }\n\n  get sender() {\n    if (!this._signature) return null;\n\n    const data = ProtoTransaction_Data.encode(\n      this._createProtoTxData(),\n    ).finish();\n\n    return sender(data, this._signature, true);\n  }\n\n  public fromBytes(bytes: Uint8Array): Transaction {\n    const protoTx = ProtoTransaction.decode(bytes);\n    const protoTxData = protoTx.data;\n\n    if (protoTxData) {\n      this.nonce = protoTxData.nonce;\n      this.epoch = protoTxData.epoch;\n      this.type = protoTxData.type;\n      this.to = protoTxData.to;\n      this.amount = protoTxData.amount;\n      this.maxFee = protoTxData.maxFee;\n      this.tips = protoTxData.tips;\n      this.payload = protoTxData.payload;\n    }\n\n    return this;\n  }\n\n  public toBytes(): Uint8Array {\n    const tx = ProtoTransaction.fromPartial({\n      data: this._createProtoTxData(),\n      signature: this._signature ?? new Uint8Array(),\n    });\n    return ProtoTransaction.encode(tx).finish();\n  }\n\n  public sign(key: string | Uint8Array | number[]): Transaction {\n    const data = ProtoTransaction_Data.encode(\n      this._createProtoTxData(),\n    ).finish();\n    this._signature = sign(data, key);\n    return this;\n  }\n\n  private _createProtoTxData(): ProtoTransaction_Data {\n    return ProtoTransaction_Data.fromPartial({\n      epoch: this._epoch,\n      nonce: this._nonce,\n      type: this._type,\n      to: this._to ?? new Uint8Array(),\n      amount: this._amount?.toBuffer() ?? new Uint8Array(),\n      maxFee: this._maxFee?.toBuffer() ?? new Uint8Array(),\n      tips: this._tips?.toBuffer() ?? new Uint8Array(),\n      payload: this._payload ?? new Uint8Array(),\n    });\n  }\n}\n"],"names":["createBaseProtoTransaction","data","undefined","signature","Uint8Array","useRlp","ProtoTransaction","encode","message","writer","_m0","Writer","create","ProtoTransaction_Data","uint32","fork","ldelim","length","bytes","bool","decode","input","reader","Reader","end","len","pos","tag","skipType","fromJSON","object","isSet","bytesFromBase64","Boolean","toJSON","obj","base64FromBytes","fromPartial","_a","_b","createBaseProtoTransaction_Data","nonce","epoch","type","to","amount","maxFee","tips","payload","Number","Math","round","_c","_d","_e","_f","_g","_h","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","forEach","byte","push","String","fromCharCode","join","value","stripHexPrefix","str","slice","isHexPrefixed","hexToUint8Array","hexString","arrayBuffer","byteValue","parseInt","substring","toHexString","byteArray","withPrefix","Array","getKeyArray","key","publicKeyToAddress","publicKey","sha3","keccak_256","array","sender","hash","secp256k1","ecdsaRecover","sign","recid","ecdsaSign","TransactionType","util","Long","configure","exports","constructor","init","this","_nonce","_epoch","_type","_to","_amount","_maxFee","_tips","_payload","_signature","BN","toBytes","_createProtoTxData","finish","fromBytes","protoTxData","tx","toBuffer","publicKeyCreate"],"mappings":"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"}