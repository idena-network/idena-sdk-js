{"version":3,"file":"index.cjs","sources":["../src/models/proto/models.ts","../src/utils.ts","../src/crypto.ts","../src/models/transaction.ts"],"sourcesContent":["/* eslint-disable */\nimport Long from 'long';\nimport * as _m0 from 'protobufjs/minimal';\n\nexport const protobufPackage = 'models';\n\nexport interface ProtoTransaction {\n  data: ProtoTransaction_Data | undefined;\n  signature: Uint8Array;\n  useRlp: boolean;\n}\n\nexport interface ProtoTransaction_Data {\n  nonce: number;\n  epoch: number;\n  type: number;\n  to: Uint8Array;\n  amount: Uint8Array;\n  maxFee: Uint8Array;\n  tips: Uint8Array;\n  payload: Uint8Array;\n}\n\nexport interface ProtoDeployContractAttachment {\n  CodeHash: Uint8Array;\n  args: Uint8Array[];\n}\n\nexport interface ProtoCallContractAttachment {\n  method: string;\n  args: Uint8Array[];\n}\n\nfunction createBaseProtoTransaction(): ProtoTransaction {\n  return { data: undefined, signature: new Uint8Array(), useRlp: false };\n}\n\nexport const ProtoTransaction = {\n  encode(\n    message: ProtoTransaction,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.data !== undefined) {\n      ProtoTransaction_Data.encode(\n        message.data,\n        writer.uint32(10).fork(),\n      ).ldelim();\n    }\n    if (message.signature.length !== 0) {\n      writer.uint32(18).bytes(message.signature);\n    }\n    if (message.useRlp === true) {\n      writer.uint32(24).bool(message.useRlp);\n    }\n    return writer;\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): ProtoTransaction {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTransaction();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.data = ProtoTransaction_Data.decode(reader, reader.uint32());\n          break;\n        case 2:\n          message.signature = reader.bytes();\n          break;\n        case 3:\n          message.useRlp = reader.bool();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProtoTransaction {\n    return {\n      data: isSet(object.data)\n        ? ProtoTransaction_Data.fromJSON(object.data)\n        : undefined,\n      signature: isSet(object.signature)\n        ? bytesFromBase64(object.signature)\n        : new Uint8Array(),\n      useRlp: isSet(object.useRlp) ? Boolean(object.useRlp) : false,\n    };\n  },\n\n  toJSON(message: ProtoTransaction): unknown {\n    const obj: any = {};\n    message.data !== undefined &&\n      (obj.data = message.data\n        ? ProtoTransaction_Data.toJSON(message.data)\n        : undefined);\n    message.signature !== undefined &&\n      (obj.signature = base64FromBytes(\n        message.signature !== undefined ? message.signature : new Uint8Array(),\n      ));\n    message.useRlp !== undefined && (obj.useRlp = message.useRlp);\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoTransaction>, I>>(\n    object: I,\n  ): ProtoTransaction {\n    const message = createBaseProtoTransaction();\n    message.data =\n      object.data !== undefined && object.data !== null\n        ? ProtoTransaction_Data.fromPartial(object.data)\n        : undefined;\n    message.signature = object.signature ?? new Uint8Array();\n    message.useRlp = object.useRlp ?? false;\n    return message;\n  },\n};\n\nfunction createBaseProtoTransaction_Data(): ProtoTransaction_Data {\n  return {\n    nonce: 0,\n    epoch: 0,\n    type: 0,\n    to: new Uint8Array(),\n    amount: new Uint8Array(),\n    maxFee: new Uint8Array(),\n    tips: new Uint8Array(),\n    payload: new Uint8Array(),\n  };\n}\n\nexport const ProtoTransaction_Data = {\n  encode(\n    message: ProtoTransaction_Data,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.nonce !== 0) {\n      writer.uint32(8).uint32(message.nonce);\n    }\n    if (message.epoch !== 0) {\n      writer.uint32(16).uint32(message.epoch);\n    }\n    if (message.type !== 0) {\n      writer.uint32(24).uint32(message.type);\n    }\n    if (message.to.length !== 0) {\n      writer.uint32(34).bytes(message.to);\n    }\n    if (message.amount.length !== 0) {\n      writer.uint32(42).bytes(message.amount);\n    }\n    if (message.maxFee.length !== 0) {\n      writer.uint32(50).bytes(message.maxFee);\n    }\n    if (message.tips.length !== 0) {\n      writer.uint32(58).bytes(message.tips);\n    }\n    if (message.payload.length !== 0) {\n      writer.uint32(66).bytes(message.payload);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoTransaction_Data {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoTransaction_Data();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint32();\n          break;\n        case 2:\n          message.epoch = reader.uint32();\n          break;\n        case 3:\n          message.type = reader.uint32();\n          break;\n        case 4:\n          message.to = reader.bytes();\n          break;\n        case 5:\n          message.amount = reader.bytes();\n          break;\n        case 6:\n          message.maxFee = reader.bytes();\n          break;\n        case 7:\n          message.tips = reader.bytes();\n          break;\n        case 8:\n          message.payload = reader.bytes();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProtoTransaction_Data {\n    return {\n      nonce: isSet(object.nonce) ? Number(object.nonce) : 0,\n      epoch: isSet(object.epoch) ? Number(object.epoch) : 0,\n      type: isSet(object.type) ? Number(object.type) : 0,\n      to: isSet(object.to) ? bytesFromBase64(object.to) : new Uint8Array(),\n      amount: isSet(object.amount)\n        ? bytesFromBase64(object.amount)\n        : new Uint8Array(),\n      maxFee: isSet(object.maxFee)\n        ? bytesFromBase64(object.maxFee)\n        : new Uint8Array(),\n      tips: isSet(object.tips)\n        ? bytesFromBase64(object.tips)\n        : new Uint8Array(),\n      payload: isSet(object.payload)\n        ? bytesFromBase64(object.payload)\n        : new Uint8Array(),\n    };\n  },\n\n  toJSON(message: ProtoTransaction_Data): unknown {\n    const obj: any = {};\n    message.nonce !== undefined && (obj.nonce = Math.round(message.nonce));\n    message.epoch !== undefined && (obj.epoch = Math.round(message.epoch));\n    message.type !== undefined && (obj.type = Math.round(message.type));\n    message.to !== undefined &&\n      (obj.to = base64FromBytes(\n        message.to !== undefined ? message.to : new Uint8Array(),\n      ));\n    message.amount !== undefined &&\n      (obj.amount = base64FromBytes(\n        message.amount !== undefined ? message.amount : new Uint8Array(),\n      ));\n    message.maxFee !== undefined &&\n      (obj.maxFee = base64FromBytes(\n        message.maxFee !== undefined ? message.maxFee : new Uint8Array(),\n      ));\n    message.tips !== undefined &&\n      (obj.tips = base64FromBytes(\n        message.tips !== undefined ? message.tips : new Uint8Array(),\n      ));\n    message.payload !== undefined &&\n      (obj.payload = base64FromBytes(\n        message.payload !== undefined ? message.payload : new Uint8Array(),\n      ));\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoTransaction_Data>, I>>(\n    object: I,\n  ): ProtoTransaction_Data {\n    const message = createBaseProtoTransaction_Data();\n    message.nonce = object.nonce ?? 0;\n    message.epoch = object.epoch ?? 0;\n    message.type = object.type ?? 0;\n    message.to = object.to ?? new Uint8Array();\n    message.amount = object.amount ?? new Uint8Array();\n    message.maxFee = object.maxFee ?? new Uint8Array();\n    message.tips = object.tips ?? new Uint8Array();\n    message.payload = object.payload ?? new Uint8Array();\n    return message;\n  },\n};\n\nfunction createBaseProtoDeployContractAttachment(): ProtoDeployContractAttachment {\n  return { CodeHash: new Uint8Array(), args: [] };\n}\n\nexport const ProtoDeployContractAttachment = {\n  encode(\n    message: ProtoDeployContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.CodeHash.length !== 0) {\n      writer.uint32(10).bytes(message.CodeHash);\n    }\n    for (const v of message.args) {\n      writer.uint32(18).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoDeployContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoDeployContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.CodeHash = reader.bytes();\n          break;\n        case 2:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProtoDeployContractAttachment {\n    return {\n      CodeHash: isSet(object.CodeHash)\n        ? bytesFromBase64(object.CodeHash)\n        : new Uint8Array(),\n      args: Array.isArray(object?.args)\n        ? object.args.map((e: any) => bytesFromBase64(e))\n        : [],\n    };\n  },\n\n  toJSON(message: ProtoDeployContractAttachment): unknown {\n    const obj: any = {};\n    message.CodeHash !== undefined &&\n      (obj.CodeHash = base64FromBytes(\n        message.CodeHash !== undefined ? message.CodeHash : new Uint8Array(),\n      ));\n    if (message.args) {\n      obj.args = message.args.map((e) =>\n        base64FromBytes(e !== undefined ? e : new Uint8Array()),\n      );\n    } else {\n      obj.args = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoDeployContractAttachment>, I>>(\n    object: I,\n  ): ProtoDeployContractAttachment {\n    const message = createBaseProtoDeployContractAttachment();\n    message.CodeHash = object.CodeHash ?? new Uint8Array();\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseProtoCallContractAttachment(): ProtoCallContractAttachment {\n  return { method: '', args: [] };\n}\n\nexport const ProtoCallContractAttachment = {\n  encode(\n    message: ProtoCallContractAttachment,\n    writer: _m0.Writer = _m0.Writer.create(),\n  ): _m0.Writer {\n    if (message.method !== '') {\n      writer.uint32(10).string(message.method);\n    }\n    for (const v of message.args) {\n      writer.uint32(18).bytes(v!);\n    }\n    return writer;\n  },\n\n  decode(\n    input: _m0.Reader | Uint8Array,\n    length?: number,\n  ): ProtoCallContractAttachment {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseProtoCallContractAttachment();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.method = reader.string();\n          break;\n        case 2:\n          message.args.push(reader.bytes());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ProtoCallContractAttachment {\n    return {\n      method: isSet(object.method) ? String(object.method) : '',\n      args: Array.isArray(object?.args)\n        ? object.args.map((e: any) => bytesFromBase64(e))\n        : [],\n    };\n  },\n\n  toJSON(message: ProtoCallContractAttachment): unknown {\n    const obj: any = {};\n    message.method !== undefined && (obj.method = message.method);\n    if (message.args) {\n      obj.args = message.args.map((e) =>\n        base64FromBytes(e !== undefined ? e : new Uint8Array()),\n      );\n    } else {\n      obj.args = [];\n    }\n    return obj;\n  },\n\n  fromPartial<I extends Exact<DeepPartial<ProtoCallContractAttachment>, I>>(\n    object: I,\n  ): ProtoCallContractAttachment {\n    const message = createBaseProtoCallContractAttachment();\n    message.method = object.method ?? '';\n    message.args = object.args?.map((e) => e) || [];\n    return message;\n  },\n};\n\ndeclare var self: any | undefined;\ndeclare var window: any | undefined;\ndeclare var global: any | undefined;\nvar globalThis: any = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis;\n  if (typeof self !== 'undefined') return self;\n  if (typeof window !== 'undefined') return window;\n  if (typeof global !== 'undefined') return global;\n  throw 'Unable to locate global object';\n})();\n\nconst atob: (b64: string) => string =\n  globalThis.atob ||\n  ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nconst btoa: (bin: string) => string =\n  globalThis.btoa ||\n  ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  arr.forEach((byte) => {\n    bin.push(String.fromCharCode(byte));\n  });\n  return btoa(bin.join(''));\n}\n\ntype Builtin =\n  | Date\n  | Function\n  | Uint8Array\n  | string\n  | number\n  | boolean\n  | undefined;\n\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\nexport type Exact<P, I extends P> = P extends Builtin\n  ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & Record<\n        Exclude<keyof I, KeysOfUnion<P>>,\n        never\n      >;\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any;\n  _m0.configure();\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n","function isHexPrefixed(str: string): boolean {\n  return str.slice(0, 2) === '0x';\n}\n\nexport function stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str;\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n\nexport function hexToUint8Array(hexString: string): Uint8Array {\n  const str = stripHexPrefix(hexString);\n\n  const arrayBuffer = new Uint8Array(str.length / 2);\n\n  for (let i = 0; i < str.length; i += 2) {\n    const byteValue = parseInt(str.substring(i, i + 2), 16);\n    arrayBuffer[i / 2] = byteValue;\n  }\n\n  return arrayBuffer;\n}\n\nexport function toHexString(\n  byteArray: Uint8Array | number[],\n  withPrefix = false,\n) {\n  return (\n    (withPrefix ? '0x' : '') +\n    Array.from(byteArray, function (byte) {\n      return `0${(byte & 0xff).toString(16)}`.slice(-2);\n    }).join('')\n  );\n}\n","import sha3 from 'js-sha3';\nimport { hexToUint8Array, toHexString } from './utils';\nimport secp256k1 from 'secp256k1';\n\nfunction getKeyArray(key: Uint8Array | number[] | string): Uint8Array {\n  return typeof key === 'string' ? hexToUint8Array(key) : new Uint8Array(key);\n}\n\nexport function privateKeyToPublicKey(\n  key: Uint8Array | number[] | string,\n  withPrefix = false,\n) {\n  const pubKey = secp256k1.publicKeyCreate(getKeyArray(key), false);\n  return toHexString(pubKey, withPrefix);\n}\n\nexport function publicKeyToAddress(\n  publicKey: Uint8Array | number[] | string,\n  withPrefix = true,\n) {\n  return toHexString(\n    sha3.keccak_256.array(getKeyArray(publicKey).slice(1)).slice(12),\n    withPrefix,\n  );\n}\n\nexport function privateKeyToAddress(\n  key: Uint8Array | number[] | string,\n  withPrefix = true,\n) {\n  if (!key) {\n    return '0x0000000000000000000000000000000000000000';\n  }\n\n  const pubKey = secp256k1.publicKeyCreate(getKeyArray(key), false);\n\n  return publicKeyToAddress(pubKey, withPrefix);\n}\n\nexport function sender(\n  data: Uint8Array | number[],\n  signature: Uint8Array | number[],\n  withPrefix = true,\n) {\n  const hash = sha3.keccak_256.array(data);\n  const pubKey = secp256k1.ecdsaRecover(\n    new Uint8Array(signature).slice(0, -1),\n    Number(signature[signature.length - 1]),\n    new Uint8Array(hash),\n    false,\n  );\n\n  return publicKeyToAddress(pubKey, withPrefix);\n}\n\nexport function sign(\n  data: Uint8Array | number[],\n  key: Uint8Array | number[] | string,\n): Uint8Array {\n  const hash = sha3.keccak_256.array(data);\n  const { signature, recid } = secp256k1.ecdsaSign(\n    new Uint8Array(hash),\n    typeof key === 'string' ? hexToUint8Array(key) : new Uint8Array(key),\n  );\n\n  return new Uint8Array([...signature, recid]);\n}\n","import { ProtoTransaction, ProtoTransaction_Data } from './proto/models';\nimport BN from 'bn.js';\nimport { hexToUint8Array, toHexString } from '../utils';\nimport sha3 from 'js-sha3';\nimport { sender, sign } from '../crypto';\n\nexport enum TransactionType {\n  SendTx = 0x0,\n  ActivationTx = 0x1,\n  InviteTx = 0x2,\n  KillTx = 0x3,\n  SubmitFlipTx = 0x4,\n  SubmitAnswersHashTx = 0x5,\n  SubmitShortAnswersTx = 0x6,\n  SubmitLongAnswersTx = 0x7,\n  EvidenceTx = 0x8,\n  OnlineStatusTx = 0x9,\n  KillInviteeTx = 0xa,\n  ChangeGodAddressTx = 0xb,\n  BurnTx = 0xc,\n  ChangeProfileTx = 0xd,\n  DeleteFlipTx = 0xe,\n  DeployContractTx = 0xf,\n  CallContractTx = 0x10,\n  TerminateContractTx = 0x11,\n  DelegateTx = 0x12,\n  UndelegateTx = 0x13,\n  KillDelegatorTx = 0x14,\n  StoreToIpfsTx = 0x15,\n}\n\nexport class Transaction {\n  private _nonce = 0;\n  private _epoch = 0;\n  private _type: TransactionType | number = 0;\n  private _to: Uint8Array | null = null;\n  private _amount: BN | null = null;\n  private _maxFee: BN | null = null;\n  private _tips: BN | null = null;\n  private _payload: Uint8Array | null = null;\n\n  private _signature: Uint8Array | null = null;\n\n  constructor(init?: Partial<Transaction>) {\n    this.nonce = init?.nonce ?? 0;\n    this.epoch = init?.epoch ?? 0;\n    this.type = init?.type ?? 0;\n    this.to = init?.to ?? null;\n    this.amount = init?.amount ?? null;\n    this.maxFee = init?.maxFee ?? null;\n    this.tips = init?.tips ?? null;\n    this.payload = init?.payload ?? null;\n  }\n\n  public set nonce(nonce: number) {\n    this._nonce = nonce;\n  }\n\n  public get nonce(): number {\n    return this._nonce;\n  }\n\n  public set epoch(epoch: number) {\n    this._epoch = epoch;\n  }\n\n  public get epoch(): number {\n    return this._epoch;\n  }\n\n  public set type(type: TransactionType) {\n    this._type = type;\n  }\n\n  public get type(): number {\n    return this._type;\n  }\n\n  public set to(to: string | Uint8Array | null) {\n    if (to === null) this._to = null;\n    else if (to instanceof Uint8Array) this._to = to;\n    else this._to = hexToUint8Array(to);\n  }\n\n  public get to(): string | null {\n    return this._to ? toHexString(this._to) : null;\n  }\n\n  public set amount(amount: number | string | BN | Uint8Array | null) {\n    this._amount = amount !== null ? new BN(amount) : null;\n  }\n\n  public get amount(): BN | null {\n    return this._amount;\n  }\n\n  public set maxFee(maxFee: number | string | BN | Uint8Array | null) {\n    this._maxFee = maxFee !== null ? new BN(maxFee) : null;\n  }\n\n  public get maxFee(): BN | null {\n    return this._maxFee;\n  }\n\n  public set tips(tips: number | string | BN | Uint8Array | null) {\n    this._tips = tips !== null ? new BN(tips) : null;\n  }\n\n  public get tips(): BN | null {\n    return this._tips;\n  }\n\n  public set payload(payload: Uint8Array | null) {\n    this._payload = payload;\n  }\n\n  public get payload(): Uint8Array | null {\n    return this._payload ? new Uint8Array(this._payload) : null;\n  }\n\n  public get signature(): Uint8Array | null {\n    return this._signature;\n  }\n\n  get hash() {\n    return Buffer.from(sha3.keccak_256.array(this.toBytes())).toString('hex');\n  }\n\n  get sender() {\n    if (!this._signature) return null;\n\n    const data = ProtoTransaction_Data.encode(\n      this._createProtoTxData(),\n    ).finish();\n\n    return sender(data, this._signature, true);\n  }\n\n  public fromBytes(bytes: Uint8Array): Transaction {\n    const protoTx = ProtoTransaction.decode(bytes);\n    const protoTxData = protoTx.data;\n\n    if (protoTxData) {\n      this.nonce = protoTxData.nonce;\n      this.epoch = protoTxData.epoch;\n      this.type = protoTxData.type;\n      this.to = protoTxData.to;\n      this.amount = protoTxData.amount;\n      this.maxFee = protoTxData.maxFee;\n      this.tips = protoTxData.tips;\n      this.payload = protoTxData.payload;\n    }\n\n    return this;\n  }\n\n  public toBytes(): Uint8Array {\n    const tx = ProtoTransaction.fromPartial({\n      data: this._createProtoTxData(),\n      signature: this._signature ?? new Uint8Array(),\n    });\n    return ProtoTransaction.encode(tx).finish();\n  }\n\n  public sign(key: string | Uint8Array | number[]): Transaction {\n    const data = ProtoTransaction_Data.encode(\n      this._createProtoTxData(),\n    ).finish();\n    this._signature = sign(data, key);\n    return this;\n  }\n\n  private _createProtoTxData(): ProtoTransaction_Data {\n    return ProtoTransaction_Data.fromPartial({\n      epoch: this._epoch,\n      nonce: this._nonce,\n      type: this._type,\n      to: this._to ?? new Uint8Array(),\n      amount: this._amount?.toBuffer() ?? new Uint8Array(),\n      maxFee: this._maxFee?.toBuffer() ?? new Uint8Array(),\n      tips: this._tips?.toBuffer() ?? new Uint8Array(),\n      payload: this._payload ?? new Uint8Array(),\n    });\n  }\n}\n"],"names":["_m0","Long","secp256k1","sha3","TransactionType","BN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAiCA,SAAS,0BAA0B,GAAA;AACjC,IAAA,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,UAAU,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;AACzE,CAAC;AAEM,MAAM,gBAAgB,GAAG;IAC9B,MAAM,CACJ,OAAyB,EACzB,MAAA,GAAqBA,cAAG,CAAC,MAAM,CAAC,MAAM,EAAE,EAAA;AAExC,QAAA,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;YAC9B,qBAAqB,CAAC,MAAM,CAC1B,OAAO,CAAC,IAAI,EACZ,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CACzB,CAAC,MAAM,EAAE,CAAC;AACZ,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAClC,YAAA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAC5C,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE;AAC3B,YAAA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxC,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf;IAED,MAAM,CAAC,KAA8B,EAAE,MAAe,EAAA;QACpD,MAAM,MAAM,GAAG,KAAK,YAAYA,cAAG,CAAC,MAAM,GAAG,KAAK,GAAG,IAAIA,cAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3E,QAAA,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;AAClE,QAAA,MAAM,OAAO,GAAG,0BAA0B,EAAE,CAAC;AAC7C,QAAA,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE;AACvB,YAAA,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,QAAQ,GAAG,KAAK,CAAC;AACf,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,IAAI,GAAG,qBAAqB,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;oBACrE,MAAM;AACR,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACnC,MAAM;AACR,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;oBAC/B,MAAM;AACR,gBAAA;AACE,oBAAA,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;oBACzB,MAAM;AACT,aAAA;AACF,SAAA;AACD,QAAA,OAAO,OAAO,CAAC;KAChB;AAED,IAAA,QAAQ,CAAC,MAAW,EAAA;QAClB,OAAO;AACL,YAAA,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;kBACpB,qBAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;AAC7C,kBAAE,SAAS;AACb,YAAA,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;AAChC,kBAAE,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC;kBACjC,IAAI,UAAU,EAAE;AACpB,YAAA,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK;SAC9D,CAAC;KACH;AAED,IAAA,MAAM,CAAC,OAAyB,EAAA;QAC9B,MAAM,GAAG,GAAQ,EAAE,CAAC;QACpB,OAAO,CAAC,IAAI,KAAK,SAAS;AACxB,aAAC,GAAG,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI;kBACpB,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;kBAC1C,SAAS,CAAC,CAAC;QACjB,OAAO,CAAC,SAAS,KAAK,SAAS;aAC5B,GAAG,CAAC,SAAS,GAAG,eAAe,CAC9B,OAAO,CAAC,SAAS,KAAK,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,IAAI,UAAU,EAAE,CACvE,CAAC,CAAC;AACL,QAAA,OAAO,CAAC,MAAM,KAAK,SAAS,KAAK,GAAG,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC9D,QAAA,OAAO,GAAG,CAAC;KACZ;AAED,IAAA,WAAW,CACT,MAAS,EAAA;;AAET,QAAA,MAAM,OAAO,GAAG,0BAA0B,EAAE,CAAC;AAC7C,QAAA,OAAO,CAAC,IAAI;YACV,MAAM,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI;kBAC7C,qBAAqB,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC;kBAC9C,SAAS,CAAC;QAChB,OAAO,CAAC,SAAS,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,SAAS,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,UAAU,EAAE,CAAC;QACzD,OAAO,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,MAAM,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,KAAK,CAAC;AACxC,QAAA,OAAO,OAAO,CAAC;KAChB;CACF,CAAC;AAEF,SAAS,+BAA+B,GAAA;IACtC,OAAO;AACL,QAAA,KAAK,EAAE,CAAC;AACR,QAAA,KAAK,EAAE,CAAC;AACR,QAAA,IAAI,EAAE,CAAC;QACP,EAAE,EAAE,IAAI,UAAU,EAAE;QACpB,MAAM,EAAE,IAAI,UAAU,EAAE;QACxB,MAAM,EAAE,IAAI,UAAU,EAAE;QACxB,IAAI,EAAE,IAAI,UAAU,EAAE;QACtB,OAAO,EAAE,IAAI,UAAU,EAAE;KAC1B,CAAC;AACJ,CAAC;AAEM,MAAM,qBAAqB,GAAG;IACnC,MAAM,CACJ,OAA8B,EAC9B,MAAA,GAAqBA,cAAG,CAAC,MAAM,CAAC,MAAM,EAAE,EAAA;AAExC,QAAA,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;AACvB,YAAA,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACxC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;AACvB,YAAA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACzC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,IAAI,KAAK,CAAC,EAAE;AACtB,YAAA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACxC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3B,YAAA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACrC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/B,YAAA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACzC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC/B,YAAA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACzC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,YAAA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACvC,SAAA;AACD,QAAA,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,YAAA,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC1C,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf;IAED,MAAM,CACJ,KAA8B,EAC9B,MAAe,EAAA;QAEf,MAAM,MAAM,GAAG,KAAK,YAAYA,cAAG,CAAC,MAAM,GAAG,KAAK,GAAG,IAAIA,cAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3E,QAAA,IAAI,GAAG,GAAG,MAAM,KAAK,SAAS,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;AAClE,QAAA,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;AAClD,QAAA,OAAO,MAAM,CAAC,GAAG,GAAG,GAAG,EAAE;AACvB,YAAA,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;YAC5B,QAAQ,GAAG,KAAK,CAAC;AACf,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAChC,MAAM;AACR,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAChC,MAAM;AACR,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;oBAC/B,MAAM;AACR,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC5B,MAAM;AACR,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAChC,MAAM;AACR,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAChC,MAAM;AACR,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBAC9B,MAAM;AACR,gBAAA,KAAK,CAAC;AACJ,oBAAA,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;oBACjC,MAAM;AACR,gBAAA;AACE,oBAAA,MAAM,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;oBACzB,MAAM;AACT,aAAA;AACF,SAAA;AACD,QAAA,OAAO,OAAO,CAAC;KAChB;AAED,IAAA,QAAQ,CAAC,MAAW,EAAA;QAClB,OAAO;AACL,YAAA,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;AACrD,YAAA,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;AACrD,YAAA,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;YAClD,EAAE,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,UAAU,EAAE;AACpE,YAAA,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;AAC1B,kBAAE,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC;kBAC9B,IAAI,UAAU,EAAE;AACpB,YAAA,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;AAC1B,kBAAE,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC;kBAC9B,IAAI,UAAU,EAAE;AACpB,YAAA,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;AACtB,kBAAE,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC;kBAC5B,IAAI,UAAU,EAAE;AACpB,YAAA,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;AAC5B,kBAAE,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC;kBAC/B,IAAI,UAAU,EAAE;SACrB,CAAC;KACH;AAED,IAAA,MAAM,CAAC,OAA8B,EAAA;QACnC,MAAM,GAAG,GAAQ,EAAE,CAAC;AACpB,QAAA,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACvE,QAAA,OAAO,CAAC,KAAK,KAAK,SAAS,KAAK,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;AACvE,QAAA,OAAO,CAAC,IAAI,KAAK,SAAS,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACpE,OAAO,CAAC,EAAE,KAAK,SAAS;aACrB,GAAG,CAAC,EAAE,GAAG,eAAe,CACvB,OAAO,CAAC,EAAE,KAAK,SAAS,GAAG,OAAO,CAAC,EAAE,GAAG,IAAI,UAAU,EAAE,CACzD,CAAC,CAAC;QACL,OAAO,CAAC,MAAM,KAAK,SAAS;aACzB,GAAG,CAAC,MAAM,GAAG,eAAe,CAC3B,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,UAAU,EAAE,CACjE,CAAC,CAAC;QACL,OAAO,CAAC,MAAM,KAAK,SAAS;aACzB,GAAG,CAAC,MAAM,GAAG,eAAe,CAC3B,OAAO,CAAC,MAAM,KAAK,SAAS,GAAG,OAAO,CAAC,MAAM,GAAG,IAAI,UAAU,EAAE,CACjE,CAAC,CAAC;QACL,OAAO,CAAC,IAAI,KAAK,SAAS;aACvB,GAAG,CAAC,IAAI,GAAG,eAAe,CACzB,OAAO,CAAC,IAAI,KAAK,SAAS,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,UAAU,EAAE,CAC7D,CAAC,CAAC;QACL,OAAO,CAAC,OAAO,KAAK,SAAS;aAC1B,GAAG,CAAC,OAAO,GAAG,eAAe,CAC5B,OAAO,CAAC,OAAO,KAAK,SAAS,GAAG,OAAO,CAAC,OAAO,GAAG,IAAI,UAAU,EAAE,CACnE,CAAC,CAAC;AACL,QAAA,OAAO,GAAG,CAAC;KACZ;AAED,IAAA,WAAW,CACT,MAAS,EAAA;;AAET,QAAA,MAAM,OAAO,GAAG,+BAA+B,EAAE,CAAC;QAClD,OAAO,CAAC,KAAK,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,KAAK,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC;QAClC,OAAO,CAAC,KAAK,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,KAAK,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC;QAClC,OAAO,CAAC,IAAI,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,IAAI,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,CAAC,CAAC;QAChC,OAAO,CAAC,EAAE,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,EAAE,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,UAAU,EAAE,CAAC;QAC3C,OAAO,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,MAAM,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,UAAU,EAAE,CAAC;QACnD,OAAO,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,MAAM,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,UAAU,EAAE,CAAC;QACnD,OAAO,CAAC,IAAI,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,IAAI,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,UAAU,EAAE,CAAC;QAC/C,OAAO,CAAC,OAAO,GAAG,CAAA,EAAA,GAAA,MAAM,CAAC,OAAO,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,UAAU,EAAE,CAAC;AACrD,QAAA,OAAO,OAAO,CAAC;KAChB;CACF,CAAC;AA8JF,IAAI,UAAU,GAAQ,CAAC,MAAK;IAC1B,IAAI,OAAO,UAAU,KAAK,WAAW;AAAE,QAAA,OAAO,UAAU,CAAC;IACzD,IAAI,OAAO,IAAI,KAAK,WAAW;AAAE,QAAA,OAAO,IAAI,CAAC;IAC7C,IAAI,OAAO,MAAM,KAAK,WAAW;AAAE,QAAA,OAAO,MAAM,CAAC;IACjD,IAAI,OAAO,MAAM,KAAK,WAAW;AAAE,QAAA,OAAO,MAAM,CAAC;AACjD,IAAA,MAAM,gCAAgC,CAAC;AACzC,CAAC,GAAG,CAAC;AAEL,MAAM,IAAI,GACR,UAAU,CAAC,IAAI;KACd,CAAC,GAAG,KAAK,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtE,SAAS,eAAe,CAAC,GAAW,EAAA;AAClC,IAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACvC,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACnC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC5B,KAAA;AACD,IAAA,OAAO,GAAG,CAAC;AACb,CAAC;AAED,MAAM,IAAI,GACR,UAAU,CAAC,IAAI;KACd,CAAC,GAAG,KAAK,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtE,SAAS,eAAe,CAAC,GAAe,EAAA;IACtC,MAAM,GAAG,GAAa,EAAE,CAAC;AACzB,IAAA,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;QACnB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,KAAC,CAAC,CAAC;IACH,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,CAAC;AA6BD,IAAIA,cAAG,CAAC,IAAI,CAAC,IAAI,KAAKC,wBAAI,EAAE;AAC1B,IAAAD,cAAG,CAAC,IAAI,CAAC,IAAI,GAAGC,wBAAW,CAAC;IAC5BD,cAAG,CAAC,SAAS,EAAE,CAAC;AACjB,CAAA;AAED,SAAS,KAAK,CAAC,KAAU,EAAA;AACvB,IAAA,OAAO,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC;AAC/C;;AC9eA,SAAS,aAAa,CAAC,GAAW,EAAA;IAChC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC;AAClC,CAAC;AAEK,SAAU,cAAc,CAAC,GAAW,EAAA;AACxC,IAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAC3B,QAAA,OAAO,GAAG,CAAC;AACZ,KAAA;AACD,IAAA,OAAO,aAAa,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACjD,CAAC;AAEK,SAAU,eAAe,CAAC,SAAiB,EAAA;AAC/C,IAAA,MAAM,GAAG,GAAG,cAAc,CAAC,SAAS,CAAC,CAAC;IAEtC,MAAM,WAAW,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAEnD,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACtC,QAAA,MAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACxD,QAAA,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC;AAChC,KAAA;AAED,IAAA,OAAO,WAAW,CAAC;AACrB,CAAC;SAEe,WAAW,CACzB,SAAgC,EAChC,UAAU,GAAG,KAAK,EAAA;IAElB,QACE,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE;AACvB,QAAA,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,IAAI,EAAA;AAClC,YAAA,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,SAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EACX;AACJ;;AC9BA,SAAS,WAAW,CAAC,GAAmC,EAAA;AACtD,IAAA,OAAO,OAAO,GAAG,KAAK,QAAQ,GAAG,eAAe,CAAC,GAAG,CAAC,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;AAC9E,CAAC;SAEe,qBAAqB,CACnC,GAAmC,EACnC,UAAU,GAAG,KAAK,EAAA;AAElB,IAAA,MAAM,MAAM,GAAGE,6BAAS,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAClE,IAAA,OAAO,WAAW,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AACzC,CAAC;SAEe,kBAAkB,CAChC,SAAyC,EACzC,UAAU,GAAG,IAAI,EAAA;IAEjB,OAAO,WAAW,CAChBC,wBAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,EAChE,UAAU,CACX,CAAC;AACJ,CAAC;SAEe,mBAAmB,CACjC,GAAmC,EACnC,UAAU,GAAG,IAAI,EAAA;IAEjB,IAAI,CAAC,GAAG,EAAE;AACR,QAAA,OAAO,4CAA4C,CAAC;AACrD,KAAA;AAED,IAAA,MAAM,MAAM,GAAGD,6BAAS,CAAC,eAAe,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAElE,IAAA,OAAO,kBAAkB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAChD,CAAC;AAEK,SAAU,MAAM,CACpB,IAA2B,EAC3B,SAAgC,EAChC,UAAU,GAAG,IAAI,EAAA;IAEjB,MAAM,IAAI,GAAGC,wBAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACzC,IAAA,MAAM,MAAM,GAAGD,6BAAS,CAAC,YAAY,CACnC,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACtC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EACvC,IAAI,UAAU,CAAC,IAAI,CAAC,EACpB,KAAK,CACN,CAAC;AAEF,IAAA,OAAO,kBAAkB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;AAChD,CAAC;AAEe,SAAA,IAAI,CAClB,IAA2B,EAC3B,GAAmC,EAAA;IAEnC,MAAM,IAAI,GAAGC,wBAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACzC,IAAA,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,GAAGD,6BAAS,CAAC,SAAS,CAC9C,IAAI,UAAU,CAAC,IAAI,CAAC,EACpB,OAAO,GAAG,KAAK,QAAQ,GAAG,eAAe,CAAC,GAAG,CAAC,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CACrE,CAAC;IAEF,OAAO,IAAI,UAAU,CAAC,CAAC,GAAG,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAC/C;;AC5DYE,iCAuBX;AAvBD,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAY,CAAA;AACZ,IAAA,eAAA,CAAA,eAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAkB,CAAA;AAClB,IAAA,eAAA,CAAA,eAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAc,CAAA;AACd,IAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAY,CAAA;AACZ,IAAA,eAAA,CAAA,eAAA,CAAA,cAAA,CAAA,GAAA,CAAA,CAAA,GAAA,cAAkB,CAAA;AAClB,IAAA,eAAA,CAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,qBAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,eAAA,CAAA,sBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,sBAA0B,CAAA;AAC1B,IAAA,eAAA,CAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,qBAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,eAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAgB,CAAA;AAChB,IAAA,eAAA,CAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAoB,CAAA;AACpB,IAAA,eAAA,CAAA,eAAA,CAAA,eAAA,CAAA,GAAA,EAAA,CAAA,GAAA,eAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,eAAA,CAAA,oBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,oBAAwB,CAAA;AACxB,IAAA,eAAA,CAAA,eAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAY,CAAA;AACZ,IAAA,eAAA,CAAA,eAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,iBAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,eAAA,CAAA,cAAA,CAAA,GAAA,EAAA,CAAA,GAAA,cAAkB,CAAA;AAClB,IAAA,eAAA,CAAA,eAAA,CAAA,kBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,kBAAsB,CAAA;AACtB,IAAA,eAAA,CAAA,eAAA,CAAA,gBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,gBAAqB,CAAA;AACrB,IAAA,eAAA,CAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,qBAA0B,CAAA;AAC1B,IAAA,eAAA,CAAA,eAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAiB,CAAA;AACjB,IAAA,eAAA,CAAA,eAAA,CAAA,cAAA,CAAA,GAAA,EAAA,CAAA,GAAA,cAAmB,CAAA;AACnB,IAAA,eAAA,CAAA,eAAA,CAAA,iBAAA,CAAA,GAAA,EAAA,CAAA,GAAA,iBAAsB,CAAA;AACtB,IAAA,eAAA,CAAA,eAAA,CAAA,eAAA,CAAA,GAAA,EAAA,CAAA,GAAA,eAAoB,CAAA;AACtB,CAAC,EAvBWA,uBAAe,KAAfA,uBAAe,GAuB1B,EAAA,CAAA,CAAA,CAAA;MAEY,WAAW,CAAA;AAYtB,IAAA,WAAA,CAAY,IAA2B,EAAA;;QAX/B,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;QACX,IAAM,CAAA,MAAA,GAAG,CAAC,CAAC;QACX,IAAK,CAAA,KAAA,GAA6B,CAAC,CAAC;QACpC,IAAG,CAAA,GAAA,GAAsB,IAAI,CAAC;QAC9B,IAAO,CAAA,OAAA,GAAc,IAAI,CAAC;QAC1B,IAAO,CAAA,OAAA,GAAc,IAAI,CAAC;QAC1B,IAAK,CAAA,KAAA,GAAc,IAAI,CAAC;QACxB,IAAQ,CAAA,QAAA,GAAsB,IAAI,CAAC;QAEnC,IAAU,CAAA,UAAA,GAAsB,IAAI,CAAC;AAG3C,QAAA,IAAI,CAAC,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,CAAC,CAAC;AAC9B,QAAA,IAAI,CAAC,KAAK,GAAG,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,CAAC,CAAC;AAC9B,QAAA,IAAI,CAAC,IAAI,GAAG,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,EAAE,GAAG,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAC;AAC3B,QAAA,IAAI,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,MAAM,GAAG,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAC;AACnC,QAAA,IAAI,CAAC,IAAI,GAAG,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAC;AAC/B,QAAA,IAAI,CAAC,OAAO,GAAG,CAAA,EAAA,GAAA,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAJ,IAAI,CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,CAAC;KACtC;IAED,IAAW,KAAK,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;AAED,IAAA,IAAW,KAAK,GAAA;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAW,KAAK,CAAC,KAAa,EAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;AAED,IAAA,IAAW,KAAK,GAAA;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;KACpB;IAED,IAAW,IAAI,CAAC,IAAqB,EAAA;AACnC,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACnB;AAED,IAAA,IAAW,IAAI,GAAA;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,IAAW,EAAE,CAAC,EAA8B,EAAA;QAC1C,IAAI,EAAE,KAAK,IAAI;AAAE,YAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;aAC5B,IAAI,EAAE,YAAY,UAAU;AAAE,YAAA,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;;AAC5C,YAAA,IAAI,CAAC,GAAG,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC;KACrC;AAED,IAAA,IAAW,EAAE,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;KAChD;IAED,IAAW,MAAM,CAAC,MAAgD,EAAA;AAChE,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,KAAK,IAAI,GAAG,IAAIC,sBAAE,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;KACxD;AAED,IAAA,IAAW,MAAM,GAAA;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,IAAW,MAAM,CAAC,MAAgD,EAAA;AAChE,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,KAAK,IAAI,GAAG,IAAIA,sBAAE,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;KACxD;AAED,IAAA,IAAW,MAAM,GAAA;QACf,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAED,IAAW,IAAI,CAAC,IAA8C,EAAA;AAC5D,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,IAAI,GAAG,IAAIA,sBAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;KAClD;AAED,IAAA,IAAW,IAAI,GAAA;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAED,IAAW,OAAO,CAAC,OAA0B,EAAA;AAC3C,QAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KACzB;AAED,IAAA,IAAW,OAAO,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;KAC7D;AAED,IAAA,IAAW,SAAS,GAAA;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;AAED,IAAA,IAAI,IAAI,GAAA;QACN,OAAO,MAAM,CAAC,IAAI,CAACF,wBAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC3E;AAED,IAAA,IAAI,MAAM,GAAA;QACR,IAAI,CAAC,IAAI,CAAC,UAAU;AAAE,YAAA,OAAO,IAAI,CAAC;AAElC,QAAA,MAAM,IAAI,GAAG,qBAAqB,CAAC,MAAM,CACvC,IAAI,CAAC,kBAAkB,EAAE,CAC1B,CAAC,MAAM,EAAE,CAAC;QAEX,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;KAC5C;AAEM,IAAA,SAAS,CAAC,KAAiB,EAAA;QAChC,MAAM,OAAO,GAAG,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/C,QAAA,MAAM,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;AAEjC,QAAA,IAAI,WAAW,EAAE;AACf,YAAA,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;AAC/B,YAAA,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;AAC/B,YAAA,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;AAC7B,YAAA,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,CAAC;AACzB,YAAA,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;AACjC,YAAA,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;AACjC,YAAA,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC;AAC7B,YAAA,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;AACpC,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;IAEM,OAAO,GAAA;;AACZ,QAAA,MAAM,EAAE,GAAG,gBAAgB,CAAC,WAAW,CAAC;AACtC,YAAA,IAAI,EAAE,IAAI,CAAC,kBAAkB,EAAE;YAC/B,SAAS,EAAE,MAAA,IAAI,CAAC,UAAU,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,UAAU,EAAE;AAC/C,SAAA,CAAC,CAAC;QACH,OAAO,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;KAC7C;AAEM,IAAA,IAAI,CAAC,GAAmC,EAAA;AAC7C,QAAA,MAAM,IAAI,GAAG,qBAAqB,CAAC,MAAM,CACvC,IAAI,CAAC,kBAAkB,EAAE,CAC1B,CAAC,MAAM,EAAE,CAAC;QACX,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAClC,QAAA,OAAO,IAAI,CAAC;KACb;IAEO,kBAAkB,GAAA;;QACxB,OAAO,qBAAqB,CAAC,WAAW,CAAC;YACvC,KAAK,EAAE,IAAI,CAAC,MAAM;YAClB,KAAK,EAAE,IAAI,CAAC,MAAM;YAClB,IAAI,EAAE,IAAI,CAAC,KAAK;YAChB,EAAE,EAAE,MAAA,IAAI,CAAC,GAAG,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,UAAU,EAAE;AAChC,YAAA,MAAM,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,UAAU,EAAE;AACpD,YAAA,MAAM,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,UAAU,EAAE;AACpD,YAAA,IAAI,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,IAAI,UAAU,EAAE;YAChD,OAAO,EAAE,MAAA,IAAI,CAAC,QAAQ,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,IAAI,UAAU,EAAE;AAC3C,SAAA,CAAC,CAAC;KACJ;AACF;;;;;;;;;;;;"}